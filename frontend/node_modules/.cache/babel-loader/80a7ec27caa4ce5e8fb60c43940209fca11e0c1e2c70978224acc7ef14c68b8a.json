{"ast":null,"code":"// File generated from our OpenAPI spec by Stainless.\nvar _a;\nimport * as Core from './core.mjs';\nimport * as Pagination from './pagination.mjs';\nimport * as API from './resources/index.mjs';\nimport * as Errors from './error.mjs';\nimport * as Uploads from './uploads.mjs';\n/** API Client for interfacing with the OpenAI API. */\nexport class OpenAI extends Core.APIClient {\n  /**\n   * API Client for interfacing with the OpenAI API.\n   *\n   * @param {string} [opts.apiKey=process.env['OPENAI_API_KEY']] - The API Key to send to the API.\n   * @param {string} [opts.baseURL] - Override the default base URL for the API.\n   * @param {number} [opts.timeout=10 minutes] - The maximum amount of time (in milliseconds) the client will wait for a response before timing out.\n   * @param {number} [opts.httpAgent] - An HTTP agent used to manage HTTP(s) connections.\n   * @param {Core.Fetch} [opts.fetch] - Specify a custom `fetch` function implementation.\n   * @param {number} [opts.maxRetries=2] - The maximum number of times the client will retry a request.\n   * @param {Core.Headers} opts.defaultHeaders - Default headers to include with every request to the API.\n   * @param {Core.DefaultQuery} opts.defaultQuery - Default query parameters to include with every request to the API.\n   * @param {boolean} [opts.dangerouslyAllowBrowser=false] - By default, client-side use of this library is not allowed, as it risks exposing your secret API credentials to attackers.\n   * @param {string | null} [opts.organization]\n   */\n  constructor(_b) {\n    var _c, _d, _e;\n    var {\n      apiKey = Core.readEnv('OPENAI_API_KEY'),\n      organization = (_c = Core.readEnv('OPENAI_ORG_ID')) !== null && _c !== void 0 ? _c : null,\n      ...opts\n    } = _b === void 0 ? {} : _b;\n    if (apiKey === undefined) {\n      throw new Error(\"The OPENAI_API_KEY environment variable is missing or empty; either provide it, or instantiate the OpenAI client with an apiKey option, like new OpenAI({ apiKey: 'my apiKey' }).\");\n    }\n    const options = {\n      apiKey,\n      organization,\n      ...opts,\n      baseURL: (_d = opts.baseURL) !== null && _d !== void 0 ? _d : `https://api.openai.com/v1`\n    };\n    if (!options.dangerouslyAllowBrowser && Core.isRunningInBrowser()) {\n      throw new Error(\"It looks like you're running in a browser-like environment.\\n\\nThis is disabled by default, as it risks exposing your secret API credentials to attackers.\\nIf you understand the risks and have appropriate mitigations in place,\\nyou can set the `dangerouslyAllowBrowser` option to `true`, e.g.,\\n\\nnew OpenAI({ apiKey, dangerouslyAllowBrowser: true });\\n\\nhttps://help.openai.com/en/articles/5112595-best-practices-for-api-key-safety\\n\");\n    }\n    super({\n      baseURL: options.baseURL,\n      timeout: (_e = options.timeout) !== null && _e !== void 0 ? _e : 600000 /* 10 minutes */,\n      httpAgent: options.httpAgent,\n      maxRetries: options.maxRetries,\n      fetch: options.fetch\n    });\n    this.completions = new API.Completions(this);\n    this.chat = new API.Chat(this);\n    this.edits = new API.Edits(this);\n    this.embeddings = new API.Embeddings(this);\n    this.files = new API.Files(this);\n    this.images = new API.Images(this);\n    this.audio = new API.Audio(this);\n    this.moderations = new API.Moderations(this);\n    this.models = new API.Models(this);\n    this.fineTuning = new API.FineTuning(this);\n    this.fineTunes = new API.FineTunes(this);\n    this._options = options;\n    this.apiKey = apiKey;\n    this.organization = organization;\n  }\n  defaultQuery() {\n    return this._options.defaultQuery;\n  }\n  defaultHeaders(opts) {\n    return {\n      ...super.defaultHeaders(opts),\n      'OpenAI-Organization': this.organization,\n      ...this._options.defaultHeaders\n    };\n  }\n  authHeaders(opts) {\n    return {\n      Authorization: `Bearer ${this.apiKey}`\n    };\n  }\n}\n_a = OpenAI;\nOpenAI.OpenAI = _a;\nOpenAI.APIError = Errors.APIError;\nOpenAI.APIConnectionError = Errors.APIConnectionError;\nOpenAI.APIConnectionTimeoutError = Errors.APIConnectionTimeoutError;\nOpenAI.APIUserAbortError = Errors.APIUserAbortError;\nOpenAI.NotFoundError = Errors.NotFoundError;\nOpenAI.ConflictError = Errors.ConflictError;\nOpenAI.RateLimitError = Errors.RateLimitError;\nOpenAI.BadRequestError = Errors.BadRequestError;\nOpenAI.AuthenticationError = Errors.AuthenticationError;\nOpenAI.InternalServerError = Errors.InternalServerError;\nOpenAI.PermissionDeniedError = Errors.PermissionDeniedError;\nOpenAI.UnprocessableEntityError = Errors.UnprocessableEntityError;\nexport const {\n  APIError,\n  APIConnectionError,\n  APIConnectionTimeoutError,\n  APIUserAbortError,\n  NotFoundError,\n  ConflictError,\n  RateLimitError,\n  BadRequestError,\n  AuthenticationError,\n  InternalServerError,\n  PermissionDeniedError,\n  UnprocessableEntityError\n} = Errors;\nexport var toFile = Uploads.toFile;\nexport var fileFromPath = Uploads.fileFromPath;\n(function (OpenAI) {\n  // Helper functions\n  OpenAI.toFile = Uploads.toFile;\n  OpenAI.fileFromPath = Uploads.fileFromPath;\n  OpenAI.Page = Pagination.Page;\n  OpenAI.CursorPage = Pagination.CursorPage;\n  OpenAI.Completions = API.Completions;\n  OpenAI.Chat = API.Chat;\n  OpenAI.Edits = API.Edits;\n  OpenAI.Embeddings = API.Embeddings;\n  OpenAI.Files = API.Files;\n  OpenAI.FileObjectsPage = API.FileObjectsPage;\n  OpenAI.Images = API.Images;\n  OpenAI.Audio = API.Audio;\n  OpenAI.Moderations = API.Moderations;\n  OpenAI.Models = API.Models;\n  OpenAI.ModelsPage = API.ModelsPage;\n  OpenAI.FineTuning = API.FineTuning;\n  OpenAI.FineTunes = API.FineTunes;\n  OpenAI.FineTunesPage = API.FineTunesPage;\n})(OpenAI || (OpenAI = {}));\nexport default OpenAI;","map":{"version":3,"names":["Core","Pagination","API","Errors","Uploads","OpenAI","APIClient","constructor","_b","readEnv","_c","opts","undefined","Error","options","_d","baseURL","dangerouslyAllowBrowser","isRunningInBrowser","_e","timeout","httpAgent","maxRetries","fetch","completions","Completions","chat","Chat","edits","Edits","embeddings","Embeddings","files","Files","images","Images","audio","Audio","moderations","Moderations","models","Models","fineTuning","FineTuning","fineTunes","FineTunes","_options","apiKey","organization","defaultQuery","defaultHeaders","authHeaders","Authorization","_a","APIError","APIConnectionError","APIConnectionTimeoutError","APIUserAbortError","NotFoundError","ConflictError","RateLimitError","BadRequestError","AuthenticationError","InternalServerError","PermissionDeniedError","UnprocessableEntityError","toFile","fileFromPath"],"sources":["/home/zain/HTN2023/node_modules/openai/src/index.ts"],"sourcesContent":["// File generated from our OpenAPI spec by Stainless.\n\nimport * as Core from './core.js';\nimport * as Pagination from './pagination.js';\nimport * as API from './resources/index.js';\nimport * as Errors from './error.js';\nimport type { Agent } from './_shims/agent.js';\nimport * as Uploads from './uploads.js';\n\nexport interface ClientOptions {\n  /**\n   * Defaults to process.env[\"OPENAI_API_KEY\"].\n   */\n  apiKey?: string;\n\n  /**\n   * Override the default base URL for the API, e.g., \"https://api.example.com/v2/\"\n   */\n  baseURL?: string;\n\n  /**\n   * The maximum amount of time (in milliseconds) that the client should wait for a response\n   * from the server before timing out a single request.\n   *\n   * Note that request timeouts are retried by default, so in a worst-case scenario you may wait\n   * much longer than this timeout before the promise succeeds or fails.\n   */\n  timeout?: number;\n\n  /**\n   * An HTTP agent used to manage HTTP(S) connections.\n   *\n   * If not provided, an agent will be constructed by default in the Node.js environment,\n   * otherwise no agent is used.\n   */\n  httpAgent?: Agent;\n\n  /**\n   * Specify a custom `fetch` function implementation.\n   *\n   * If not provided, we use `node-fetch` on Node.js and otherwise expect that `fetch` is\n   * defined globally.\n   */\n  fetch?: Core.Fetch | undefined;\n\n  /**\n   * The maximum number of times that the client will retry a request in case of a\n   * temporary failure, like a network error or a 5XX error from the server.\n   *\n   * @default 2\n   */\n  maxRetries?: number;\n\n  /**\n   * Default headers to include with every request to the API.\n   *\n   * These can be removed in individual requests by explicitly setting the\n   * header to `undefined` or `null` in request options.\n   */\n  defaultHeaders?: Core.Headers;\n\n  /**\n   * Default query parameters to include with every request to the API.\n   *\n   * These can be removed in individual requests by explicitly setting the\n   * param to `undefined` in request options.\n   */\n  defaultQuery?: Core.DefaultQuery;\n\n  /**\n   * By default, client-side use of this library is not allowed, as it risks exposing your secret API credentials to attackers.\n   * Only set this option to `true` if you understand the risks and have appropriate mitigations in place.\n   */\n  dangerouslyAllowBrowser?: boolean;\n\n  organization?: string | null;\n}\n\n/** API Client for interfacing with the OpenAI API. */\nexport class OpenAI extends Core.APIClient {\n  apiKey: string;\n  organization?: string | null;\n\n  private _options: ClientOptions;\n\n  /**\n   * API Client for interfacing with the OpenAI API.\n   *\n   * @param {string} [opts.apiKey=process.env['OPENAI_API_KEY']] - The API Key to send to the API.\n   * @param {string} [opts.baseURL] - Override the default base URL for the API.\n   * @param {number} [opts.timeout=10 minutes] - The maximum amount of time (in milliseconds) the client will wait for a response before timing out.\n   * @param {number} [opts.httpAgent] - An HTTP agent used to manage HTTP(s) connections.\n   * @param {Core.Fetch} [opts.fetch] - Specify a custom `fetch` function implementation.\n   * @param {number} [opts.maxRetries=2] - The maximum number of times the client will retry a request.\n   * @param {Core.Headers} opts.defaultHeaders - Default headers to include with every request to the API.\n   * @param {Core.DefaultQuery} opts.defaultQuery - Default query parameters to include with every request to the API.\n   * @param {boolean} [opts.dangerouslyAllowBrowser=false] - By default, client-side use of this library is not allowed, as it risks exposing your secret API credentials to attackers.\n   * @param {string | null} [opts.organization]\n   */\n  constructor({\n    apiKey = Core.readEnv('OPENAI_API_KEY'),\n    organization = Core.readEnv('OPENAI_ORG_ID') ?? null,\n    ...opts\n  }: ClientOptions = {}) {\n    if (apiKey === undefined) {\n      throw new Error(\n        \"The OPENAI_API_KEY environment variable is missing or empty; either provide it, or instantiate the OpenAI client with an apiKey option, like new OpenAI({ apiKey: 'my apiKey' }).\",\n      );\n    }\n\n    const options: ClientOptions = {\n      apiKey,\n      organization,\n      ...opts,\n      baseURL: opts.baseURL ?? `https://api.openai.com/v1`,\n    };\n\n    if (!options.dangerouslyAllowBrowser && Core.isRunningInBrowser()) {\n      throw new Error(\n        \"It looks like you're running in a browser-like environment.\\n\\nThis is disabled by default, as it risks exposing your secret API credentials to attackers.\\nIf you understand the risks and have appropriate mitigations in place,\\nyou can set the `dangerouslyAllowBrowser` option to `true`, e.g.,\\n\\nnew OpenAI({ apiKey, dangerouslyAllowBrowser: true });\\n\\nhttps://help.openai.com/en/articles/5112595-best-practices-for-api-key-safety\\n\",\n      );\n    }\n\n    super({\n      baseURL: options.baseURL!,\n      timeout: options.timeout ?? 600000 /* 10 minutes */,\n      httpAgent: options.httpAgent,\n      maxRetries: options.maxRetries,\n      fetch: options.fetch,\n    });\n    this._options = options;\n\n    this.apiKey = apiKey;\n    this.organization = organization;\n  }\n\n  completions: API.Completions = new API.Completions(this);\n  chat: API.Chat = new API.Chat(this);\n  edits: API.Edits = new API.Edits(this);\n  embeddings: API.Embeddings = new API.Embeddings(this);\n  files: API.Files = new API.Files(this);\n  images: API.Images = new API.Images(this);\n  audio: API.Audio = new API.Audio(this);\n  moderations: API.Moderations = new API.Moderations(this);\n  models: API.Models = new API.Models(this);\n  fineTuning: API.FineTuning = new API.FineTuning(this);\n  fineTunes: API.FineTunes = new API.FineTunes(this);\n\n  protected override defaultQuery(): Core.DefaultQuery | undefined {\n    return this._options.defaultQuery;\n  }\n\n  protected override defaultHeaders(opts: Core.FinalRequestOptions): Core.Headers {\n    return {\n      ...super.defaultHeaders(opts),\n      'OpenAI-Organization': this.organization,\n      ...this._options.defaultHeaders,\n    };\n  }\n\n  protected override authHeaders(opts: Core.FinalRequestOptions): Core.Headers {\n    return { Authorization: `Bearer ${this.apiKey}` };\n  }\n\n  static OpenAI = this;\n\n  static APIError = Errors.APIError;\n  static APIConnectionError = Errors.APIConnectionError;\n  static APIConnectionTimeoutError = Errors.APIConnectionTimeoutError;\n  static APIUserAbortError = Errors.APIUserAbortError;\n  static NotFoundError = Errors.NotFoundError;\n  static ConflictError = Errors.ConflictError;\n  static RateLimitError = Errors.RateLimitError;\n  static BadRequestError = Errors.BadRequestError;\n  static AuthenticationError = Errors.AuthenticationError;\n  static InternalServerError = Errors.InternalServerError;\n  static PermissionDeniedError = Errors.PermissionDeniedError;\n  static UnprocessableEntityError = Errors.UnprocessableEntityError;\n}\n\nexport const {\n  APIError,\n  APIConnectionError,\n  APIConnectionTimeoutError,\n  APIUserAbortError,\n  NotFoundError,\n  ConflictError,\n  RateLimitError,\n  BadRequestError,\n  AuthenticationError,\n  InternalServerError,\n  PermissionDeniedError,\n  UnprocessableEntityError,\n} = Errors;\n\nexport import toFile = Uploads.toFile;\nexport import fileFromPath = Uploads.fileFromPath;\n\nexport namespace OpenAI {\n  // Helper functions\n  export import toFile = Uploads.toFile;\n  export import fileFromPath = Uploads.fileFromPath;\n\n  export import RequestOptions = Core.RequestOptions;\n\n  export import Page = Pagination.Page;\n  export import PageResponse = Pagination.PageResponse;\n\n  export import CursorPage = Pagination.CursorPage;\n  export import CursorPageParams = Pagination.CursorPageParams;\n  export import CursorPageResponse = Pagination.CursorPageResponse;\n\n  export import Completions = API.Completions;\n  export import Completion = API.Completion;\n  export import CompletionChoice = API.CompletionChoice;\n  export import CompletionUsage = API.CompletionUsage;\n  export import CompletionCreateParams = API.CompletionCreateParams;\n  export import CompletionCreateParamsNonStreaming = API.CompletionCreateParamsNonStreaming;\n  export import CompletionCreateParamsStreaming = API.CompletionCreateParamsStreaming;\n\n  export import Chat = API.Chat;\n\n  export import Edits = API.Edits;\n  export import Edit = API.Edit;\n  export import EditCreateParams = API.EditCreateParams;\n\n  export import Embeddings = API.Embeddings;\n  export import CreateEmbeddingResponse = API.CreateEmbeddingResponse;\n  export import Embedding = API.Embedding;\n  export import EmbeddingCreateParams = API.EmbeddingCreateParams;\n\n  export import Files = API.Files;\n  export import FileContent = API.FileContent;\n  export import FileDeleted = API.FileDeleted;\n  export import FileObject = API.FileObject;\n  export import FileObjectsPage = API.FileObjectsPage;\n  export import FileCreateParams = API.FileCreateParams;\n\n  export import Images = API.Images;\n  export import Image = API.Image;\n  export import ImagesResponse = API.ImagesResponse;\n  export import ImageCreateVariationParams = API.ImageCreateVariationParams;\n  export import ImageEditParams = API.ImageEditParams;\n  export import ImageGenerateParams = API.ImageGenerateParams;\n\n  export import Audio = API.Audio;\n\n  export import Moderations = API.Moderations;\n  export import Moderation = API.Moderation;\n  export import ModerationCreateResponse = API.ModerationCreateResponse;\n  export import ModerationCreateParams = API.ModerationCreateParams;\n\n  export import Models = API.Models;\n  export import Model = API.Model;\n  export import ModelDeleted = API.ModelDeleted;\n  export import ModelsPage = API.ModelsPage;\n\n  export import FineTuning = API.FineTuning;\n\n  export import FineTunes = API.FineTunes;\n  export import FineTune = API.FineTune;\n  export import FineTuneEvent = API.FineTuneEvent;\n  export import FineTuneEventsListResponse = API.FineTuneEventsListResponse;\n  export import FineTunesPage = API.FineTunesPage;\n  export import FineTuneCreateParams = API.FineTuneCreateParams;\n  export import FineTuneListEventsParams = API.FineTuneListEventsParams;\n  export import FineTuneListEventsParamsNonStreaming = API.FineTuneListEventsParamsNonStreaming;\n  export import FineTuneListEventsParamsStreaming = API.FineTuneListEventsParamsStreaming;\n}\n\nexport default OpenAI;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}