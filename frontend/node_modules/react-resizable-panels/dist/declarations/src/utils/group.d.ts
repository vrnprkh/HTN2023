import { CommittedValues, InitialDragState } from "../PanelGroup.js";
import { PanelData, ResizeEvent, Units } from "../types.js";
export declare function adjustByDelta(event: ResizeEvent | null, committedValues: CommittedValues, idBefore: string, idAfter: string, deltaPixels: number, prevSizes: number[], panelSizeBeforeCollapse: Map<string, number>, initialDragState: InitialDragState | null): number[];
export declare function callPanelCallbacks(panelsArray: PanelData[], sizes: number[], panelIdToLastNotifiedSizeMap: Record<string, number>): void;
export declare function calculateDefaultLayout({ groupId, panels, units, }: {
    groupId: string;
    panels: Map<string, PanelData>;
    units: Units;
}): number[];
export declare function getBeforeAndAfterIds(id: string, panelsArray: PanelData[]): [idBefore: string | null, idAFter: string | null];
export declare function getAvailableGroupSizePixels(groupId: string): number;
export declare function getFlexGrow(panels: Map<string, PanelData>, id: string, sizes: number[]): string;
export declare function getPanel(id: string): HTMLDivElement | null;
export declare function getPanelGroup(id: string): HTMLDivElement | null;
export declare function getResizeHandle(id: string): HTMLDivElement | null;
export declare function getResizeHandleIndex(id: string): number | null;
export declare function getResizeHandles(): HTMLDivElement[];
export declare function getResizeHandlesForGroup(groupId: string): HTMLDivElement[];
export declare function getResizeHandlePanelIds(groupId: string, handleId: string, panelsArray: PanelData[]): [idBefore: string | null, idAfter: string | null];
export declare function panelsMapToSortedArray(panels: Map<string, PanelData>): PanelData[];
export declare function safeResizePanel(units: Units, groupSizePixels: number, panel: PanelData, prevSize: number, nextSize: number, event?: ResizeEvent | null): number;
export declare function validatePanelProps(units: Units, panelData: PanelData): void;
export declare function validatePanelGroupLayout({ groupId, panels, nextSizes, prevSizes, units, }: {
    groupId: string;
    panels: Map<string, PanelData>;
    nextSizes: number[];
    prevSizes: number[];
    units: Units;
}): number[];
