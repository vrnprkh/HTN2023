import { CSSProperties, ElementType, ReactNode } from "./vendor/react.js";
import { Direction, PanelData, PanelGroupOnLayout, PanelGroupStorage, Units } from "./types.js";
export type CommittedValues = {
    direction: Direction;
    id: string;
    panels: Map<string, PanelData>;
    sizes: number[];
    units: Units;
};
export type PanelDataMap = Map<string, PanelData>;
export type InitialDragState = {
    dragHandleRect: DOMRect;
    dragOffset: number;
    sizes: number[];
};
export type PanelGroupProps = {
    autoSaveId?: string;
    children?: ReactNode;
    className?: string;
    direction: Direction;
    disablePointerEventsDuringResize?: boolean;
    id?: string | null;
    onLayout?: PanelGroupOnLayout;
    storage?: PanelGroupStorage;
    style?: CSSProperties;
    tagName?: ElementType;
    units?: Units;
};
export type ImperativePanelGroupHandle = {
    getId: () => string;
    getLayout: (units?: Units) => number[];
    setLayout: (panelSizes: number[], units?: Units) => void;
};
export declare const PanelGroup: import("react").ForwardRefExoticComponent<PanelGroupProps & import("react").RefAttributes<ImperativePanelGroupHandle>>;
